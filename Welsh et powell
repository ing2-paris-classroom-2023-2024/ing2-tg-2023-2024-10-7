
// Coloriage du graphe selon l'algorithme de Welsh-Powell
void colorGraphWelshPowell(struct Graph* graph) {
    struct VertexDegree degrees[graph->numVertices];
    calculateDegrees(graph, degrees);

    qsort(degrees, graph->numVertices, sizeof(degrees[0]), compareDegrees);

    int color[graph->numVertices];
    bool available[graph->numVertices];

    for (int i = 0; i < graph->numVertices; i++) {
        color[i] = -1;
        available[i] = true;
    }

    for (int i = 0; i < graph->numVertices; i++) {
        int u = degrees[i].vertex;

        struct Node* temp = graph->adjLists[u];
        while (temp) {
            if (color[temp->vertex] != -1) {
                available[color[temp->vertex]] = false;
            }
            temp = temp->next;
        }

        int cr;
        for (cr = 0; cr < graph->numVertices; cr++) {
            if (available[cr]) break;
        }

        color[u] = cr;

        for (int j = 0; j < graph->numVertices; j++) {
            available[j] = true;
        }
    }

    for (int u = 0; u < graph->numVertices; u++) {
        printf("Le sommet %d est dans la station %d\n", u + 1, color[u] + 1);
    }
}
